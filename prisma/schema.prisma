// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String       @id @default(uuid())
  name          String
  email         String       @unique()
  password      String?
  image         String?
  role          UserRole     @default(USER)
  emailVerified Boolean?     @map("email_verified")
  createdAt     DateTime?
  enrollment    enrollment[]
}

model course {
  id             String       @id @default(uuid())
  title          String       @unique
  description    String
  price          Int
  questionsCount Int          @map("questions_count")
  question       question[]
  enrollment     enrollment[]
}

model question {
  id            String @id @default(uuid())
  title         String @unique
  answerOptions Json   @map("answer_options")

  course   course    @relation(fields: [courseId], references: [id])
  courseId String    @map("course_id")
  answers  answers[]
}

model answers {
  id String @id @default(uuid())

  title      String
  question   question @relation(fields: [questionId], references: [id])
  questionId String   @map("question_id")
}

model enrollment {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  course   course @relation(fields: [courseId], references: [id])
  courseId String @map("course_id")
}
